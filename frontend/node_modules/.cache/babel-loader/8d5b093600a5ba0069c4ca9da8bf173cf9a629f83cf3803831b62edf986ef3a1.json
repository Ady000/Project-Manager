{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\Project-manager-v1\\\\frontend\\\\src\\\\components\\\\ProjectManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './ProjectManager.css'; // Optional: For custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectManager = () => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!question.trim()) {\n      alert('Please enter a question');\n      return;\n    }\n    setLoading(true);\n    setResponse('');\n    try {\n      const result = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/ask`, {\n        question\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setResponse(result.data.reply);\n    } catch (error) {\n      console.error('Error:', error);\n      setResponse('Failed to get a response. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-manager-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project Manager Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Ask the project manager something...\",\n        value: question,\n        onChange: e => setQuestion(e.target.value),\n        rows: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Loading...' : 'Ask'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(ProjectManager, \"z/OsahGCcBDffbIHHAdFgdu3l+s=\");\n_c = ProjectManager;\nexport default ProjectManager;\nvar _c;\n$RefreshReg$(_c, \"ProjectManager\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ProjectManager","_s","question","setQuestion","response","setResponse","loading","setLoading","handleSubmit","e","preventDefault","trim","alert","result","post","process","env","REACT_APP_BACKEND_URL","headers","data","reply","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","rows","type","disabled","_c","$RefreshReg$"],"sources":["D:/New folder/Project-manager-v1/frontend/src/components/ProjectManager.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './ProjectManager.css'; // Optional: For custom styles\r\n\r\nconst ProjectManager = () => {\r\n    const [question, setQuestion] = useState('');\r\n    const [response, setResponse] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!question.trim()) {\r\n            alert('Please enter a question');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setResponse('');\r\n\r\n        try {\r\n            const result = await axios.post(\r\n                `${process.env.REACT_APP_BACKEND_URL}/ask`,\r\n                { question },\r\n                { headers: { 'Content-Type': 'application/json' } }\r\n            );\r\n\r\n            setResponse(result.data.reply);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setResponse('Failed to get a response. Please try again later.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"project-manager-container\">\r\n            <h1>Project Manager Assistant</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea\r\n                    placeholder=\"Ask the project manager something...\"\r\n                    value={question}\r\n                    onChange={(e) => setQuestion(e.target.value)}\r\n                    rows=\"5\"\r\n                />\r\n                <button type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Loading...' : 'Ask'}\r\n                </button>\r\n            </form>\r\n            {response && (\r\n                <div className=\"response-box\">\r\n                    <h2>Response:</h2>\r\n                    <p>{response}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}